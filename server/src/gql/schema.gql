# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Role {
  id: String!
  name: String!
  accesses: [ACL!]!
  users: [User!]!
  createdAt: DateTime!
}

"""List of Access Control properties"""
enum ACL {
  DEFAULT
  ROLES_MANAGE
  USER_ROLE_MANAGE
  TAGS_MANAGE
  LESSONS_MANAGE
  COURSES_MANAGE
  COMMENTS_MANAGE
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type User {
  id: String!
  email: String!
  status: String!
  roles: [Role!]!
  updatedAt: DateTime!
  createdAt: DateTime!
}

type AuthOutput {
  accessToken: String!
  refreshToken: String!
  user: User!
}

type TagType {
  id: ID!
  name: String!
  tags: [Tag!]!
  updatedAt: DateTime!
  createdAt: DateTime!
}

type Tag {
  id: ID!
  name: String!
  type: TagType!
  courses: [Course!]!
  updatedAt: DateTime!
  createdAt: DateTime!
}

type Comment {
  id: ID!
  content: String!
  course: Course!
  updatedAt: DateTime!
  createdAt: DateTime!
}

type LessonContentItem {
  type: LessonContentItemType!
  text: String!
  src: String!
}

"""List content types allowed inside lesson"""
enum LessonContentItemType {
  VIDEO
  TEXT
  TAB
}

type LessonContent {
  items: [LessonContentItem!]!
}

type Lesson {
  id: ID!
  name: String!
  content: JSON
  course: Course!
  updatedAt: DateTime!
  createdAt: DateTime!
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

type Course {
  id: ID!
  name: String!
  description: String!
  coverSrc: String!
  isPublished: Boolean!
  tags: [Tag!]!
  lessons: [Lesson!]!
  comments: [Comment!]!
  author: User!
  updatedAt: DateTime!
  createdAt: DateTime!
}

type Query {
  roles: [Role!]!
  course(id: String!): Course!
  courses: [Course!]!
  tagTypes: [TagType!]!
}

type Mutation {
  role(createRoleInput: CreateRoleInput!): Role!
  signIn(password: String!, email: String!): AuthOutput!
  signUp(signUpData: SignUpInput!): AuthOutput!
  refresh: AuthOutput!
  course(createCourseInput: CreateCourseInput!): Course!
}

input CreateRoleInput {
  name: String!
  accesses: [ACL!]!
}

input SignUpInput {
  email: String!
  password: String!
}

input CreateCourseInput {
  name: String!
  description: String!
  coverSrc: String!
  isPublished: Boolean = false
  tagIds: [String!] = []
  lessons: [CreateCourseLessonInput!] = []
}

input CreateCourseLessonInput {
  name: String!
  content: LessonContentInput!
}

input LessonContentInput {
  items: [LessonContentItemInput!]!
}

input LessonContentItemInput {
  type: LessonContentItemType!
  text: String!
  src: String!
}
